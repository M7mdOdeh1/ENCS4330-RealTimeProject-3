MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;
                      00003 ;   Project:   Simple Calculator   
                      00004 ;   File:   master.asm
                      00005 ;   Date:   2024-02-15
                      00006 ;   -----------------------------------
                      00007 ;   Authors:   Mohammed Owda
                      00008 ;              Mahmoud Hamdan
                      00009 ;              Yazeed Hamdan
                      00010 ;              Mohammad AbuShams
                      00011 ;   -----------------------------------
                      00012 ;   Inputs and Outputs:
                      00013 ;   Input:  2 numbers x 2 digits
                      00014 ;       Integer handling only  
                      00015 ;   Multiplication only
                      00016 ;   Output: 4 digits number
                      00017 ;   -----------------------------------
                      00018 ;   Description:
                      00019 ;   Master CPU will handle the Multiplication of the first number by the tenth digit of the second numbe
                            r
                      00020 ;   Auxiliary CPU will handle the Multiplication of the first number by the unit digit of the second num
                            ber
                      00021 ;
                      00022 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00023            
                      00024     PROCESSOR 16F877A
                      00025     ;   Clock = XT 4MHz, standard fuse settings
                      00026 
                      00027     INCLUDE "P16F877A.INC"      ; Include the 16F877 header file
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2011 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00564         LIST
                      00028     
2007   3731           00029         __CONFIG 0x3731 ; 00011011100110001
                      00030 
                      00031     
                      00032 ; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00033     ;
Warning[207]: Found label after column 1. (current_digit)
  00000030            00034     current_digit   EQU 30    ; Current digit to be incremented
Warning[207]: Found label after column 1. (count)
  00000031            00035     count           EQU 31            ; Counter
Warning[207]: Found label after column 1. (num1_tens)
  00000032            00036     num1_tens       EQU 32        ; Tens digit of the first number
Warning[207]: Found label after column 1. (num1_unit)
  00000033            00037     num1_unit       EQU 33        ; Unit digit of the first number
Warning[207]: Found label after column 1. (num2_tens)
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000034            00038     num2_tens       EQU 34        ; Tens digit of the second number
Warning[207]: Found label after column 1. (num2_unit)
  00000035            00039     num2_unit       EQU 35        ; Unit digit of the second number
Warning[207]: Found label after column 1. (timerCounter)
  00000036            00040     timerCounter    EQU 36     ; Custom timer counter for 2-second detection
Warning[207]: Found label after column 1. (position)
  00000037            00041     position        EQU 37         ; Cursor position for the digit to be displayed
Warning[207]: Found label after column 1. (state)
  00000038            00042     state           EQU 38            ; State of input(1: first digit, 2: second digit, 4: third digit, 
                            8: fourth digit, 16: finished)
Warning[207]: Found label after column 1. (res_unit)
  00000041            00043     res_unit        EQU 41            ; Unit digit of the result
Warning[207]: Found label after column 1. (res_tens)
  00000042            00044     res_tens        EQU 42            ; Tens digit of the result
Warning[207]: Found label after column 1. (res_hundreds)
  00000043            00045     res_hundreds    EQU 43            ; Hundreds digit of the result
Warning[207]: Found label after column 1. (res_thousands)
  00000044            00046     res_thousands   EQU 44            ; Thousands digit of the result
Warning[207]: Found label after column 1. (x)
  00000045            00047     x               EQU 45            ; Temp to put the first digit of multiplication operation
Warning[207]: Found label after column 1. (y)
  00000046            00048     y               EQU 46            ; Temp to put the second digit of multiplication operation
Warning[207]: Found label after column 1. (res_mult)
  00000047            00049     res_mult        EQU 47            ; 2 bytes to save the result of the multiplication
                      00050 
                      00051 
                      00052 ; Program Begins ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00053 
                      00054     ORG 0x00    ; Default start address 
0000   0000           00055     NOP         ; required for ICD mode
0001   2???           00056     GOTO    init
                      00057     
                      00058 
                      00059 ; Interrupt vector location ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00060     ORG 0x04            ; Interrupt vector location
0004   0000           00061     NOP
0005   138B           00062     BCF     INTCON, GIE    ; disable global interrupt during the interrupt
0006   1C8B           00063     BTFSS   INTCON, INTF       ; Check if the interrupt is from INT0
0007   2???           00064     GOTO    timerInterrupt   ; Jump to Timer0 interrupt
                      00065 
0008                  00066 buttonInterrupt:
                      00067     ; check if the state is 16 (the button is pressed after the result is displayed, so we need to reset
                             the system)
0008   1283 1303      00068     BANKSEL state
000A   1A38           00069     BTFSC   state, 4
000B   2???           00070     GOTO    resetSystem
                      00071 
                      00072 
                      00073 
000C   2???           00074     CALL incrementCurrentDigit  ; increment the current digit
                      00075     
000D   1283 1303      00076     BANKSEL current_digit
000F   0830           00077     MOVF    current_digit, W      ; Move the current digit to W
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010   3E30           00078     ADDLW   0x30
0011   14F4           00079     BSF     Select,RS           ; Select data mode
0012   2???           00080     CALL    send                ; Send the current digit to the LCD
                      00081 
                      00082     ; move cursor to the current digit
0013   10F4           00083     BCF     Select,RS   ; Select command mode
0014   0837           00084     MOVF    position, W
0015   2???           00085     CALL    send
                      00086 
0016   2???           00087     CALL    resetTimer0            ; Reset Timer0
0017   108B           00088     BCF     INTCON, INTF            ; Clear the interrupt flag
0018   178B           00089     BSF     INTCON, GIE             ; enable global interrupt
0019   0009           00090     RETFIE
                      00091 
                      00092 
                      00093 
                      00094 ; Timer Interrupt Service Routine for 2-second delay detection
001A                  00095 timerInterrupt:
001A   1283 1303      00096     BANKSEL INTCON
                      00097         
001C   1283 1303      00098         BANKSEL PORTA
Message[305]: Using default destination of 1 (file).
001E   0BB6           00099         DECFSZ  timerCounter    ; Decrement the timer counter and check if 2 seconds have passed
001F   2???           00100     GOTO        skip            ; Skip the next step if 2 seconds have not passed
                      00101 
                      00102     ; if 2 seconds have passed 
                      00103 
0020   0AB7           00104     INCF    position, F     ; increment the cursor position to move the cursor to the next digit
0021   10F4           00105     BCF     Select,RS       ; Select command mode
0022   0837           00106     MOVF    position, W
0023   2???           00107     CALL    send            ; move cursor to the next digit
                      00108 
                      00109     ;
                      00110 
                      00111     ; check state to save the current digit in the appropriate variable
0024   1283 1303      00112     BANKSEL state
0026   1838           00113     BTFSC   state, 0          ; check if the state is 1(first digit of the first number)
0027   2???           00114     GOTO    saveNum1Tens
0028   18B8           00115     BTFSC   state, 1          ; check if the state is 2(second digit of the first number)
0029   2???           00116     GOTO    saveNum1Unit    
002A   1938           00117     BTFSC   state, 2          ; check if the state is 4(first digit of the second number)
002B   2???           00118     GOTO    saveNum2Tens    
002C   19B8           00119     BTFSC   state, 3          ; check if the state is 8(second digit of the second number)
002D   2???           00120     GOTO    saveNum2Unit
                      00121 
                      00122 ;--------------------------------------------------------------------------------------------
                      00123 
                      00124 ; save the current digit in num1_tens
002E                  00125 saveNum1Tens:
002E   1283 1303      00126     BANKSEL num1_tens
0030   0830           00127     MOVF    current_digit, W
0031   00B2           00128     MOVWF   num1_tens       ; save the current digit in num1_tens
                      00129 
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0032   3002           00130     MOVLW   0x02
0033   00B8           00131     MOVWF   state          ; change the state to 2 (entering the 2nd digit of the first number)
                      00132 
0034   2???           00133     GOTO    resetCurrentDigit
                      00134 
                      00135 ; save the current digit in num1_unit
0035                  00136 saveNum1Unit:
0035   1283 1303      00137     BANKSEL num1_unit
0037   0830           00138     MOVF    current_digit, W
0038   00B3           00139     MOVWF   num1_unit       ; save the current digit in num1_unit
                      00140 
0039   3004           00141     MOVLW    0x04    
003A   00B8           00142     MOVWF    state          ; change the state to 4 (entering the 1st digit of the second number)
                      00143 
                      00144     ; print "x" on the LCD
003B   1283 1303      00145     BANKSEL PORTD               ; Select bank 0
003D   14F4           00146     BSF    Select,RS    ; Select data mode
003E   3078           00147     MOVLW       'x'
003F   2???           00148     CALL        send
                      00149 
                      00150     ; increment the cursor position
0040   0AB7           00151     INCF    position, F     ; increment the cursor position to move the cursor to the next digit
                      00152 
0041   2???           00153     CALL    printNumber2     ; print "Number 2" on the LCD on the first line
                      00154 
0042   2???           00155     GOTO    resetCurrentDigit
                      00156 
                      00157 ; save the current digit in num2_tens
0043                  00158 saveNum2Tens:
0043   1283 1303      00159     BANKSEL num2_tens
0045   0830           00160     MOVF    current_digit, W
0046   00B4           00161     MOVWF   num2_tens       ; save the current digit in num2_tens
                      00162 
0047   3008           00163     MOVLW    0x08
0048   00B8           00164     MOVWF    state          ; change the state to 8 (entering the 2nd digit of the second number)
                      00165 
0049   2???           00166     GOTO    resetCurrentDigit
                      00167 
                      00168 ; save the current digit in num2_unit
004A                  00169 saveNum2Unit:
004A   1283 1303      00170     BANKSEL num2_unit
004C   0830           00171     MOVF    current_digit, W
004D   00B5           00172     MOVWF   num2_unit       ; save the current digit in num2_unit
                      00173 
004E   3010           00174     MOVLW    0x10
004F   00B8           00175     MOVWF    state          ; change the state to 16 (finished entering the second number)
                      00176 
                      00177     ; print "=" on the LCD
0050   1283 1303      00178     BANKSEL PORTD               ; Select bank 0
0052   14F4           00179     BSF    Select,RS    ; Select data mode
0053   303D           00180     MOVLW       '='
0054   2???           00181     CALL        send
                      00182 
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0055   2???           00183     CALL    printResult ; print "Result" on the LCD on the first line
                      00184 
                      00185     ; hide the cursor
0056   10F4           00186     BCF     Select,RS   ; Select command mode
0057   300C           00187     MOVLW       0x0C
0058   2???           00188     CALL        send
                      00189 
                      00190     ; disable the Timer0 interrupt
0059   1283 1303      00191     BANKSEL INTCON
005B   128B           00192     BCF     INTCON, TMR0IE  ; Disable Timer0 interrupt
                      00193 
005C   1283 1303      00194     BANKSEL TMR0        
005E   0181           00195         CLRF    TMR0           ; Clear Timer0
                      00196 
                      00197     ; calculate the multiplication of the first number by the tenth digit of the second number
005F   2???           00198     GOTO    calculateSecondMultiplication
0060                  00199 backFromMult:
                      00200 
0060   0009           00201     RETFIE
                      00202 
                      00203 ;--------------------------------------------------------------------------------------------
                      00204 
0061                  00205 resetCurrentDigit:
0061   1283 1303      00206     BANKSEL PORTD               ; Select bank 0
0063   01B0           00207     CLRF    current_digit      ; Reset the current digit to 0
0064   14F4           00208     BSF     Select,RS   ; Select data mode
0065   3030           00209     MOVLW       '0'         ; print the current digit
0066   2???           00210     CALL        send
                      00211 
                      00212     ; make the cursor pointing to the current digit
0067   10F4           00213     BCF     Select,RS   ; Select command mode
0068   0837           00214     MOVF    position, W
0069   2???           00215     CALL    send
006A   2???           00216     CALL    resetTimer0            ; Reset Timer0
                      00217 
                      00218 
006B                  00219 skip:
006B   1283 1303      00220     BANKSEL INTCON
006D   178B           00221     BSF     INTCON, GIE     ; enable global interrupt
006E   110B           00222     BCF     INTCON, T0IF    ; Clear TMR0 overflow flag
006F   1283 1303      00223     BANKSEL TMR0        
0071   0181           00224         CLRF    TMR0           ; Clear Timer0
                      00225     
0072   0009           00226     RETFIE              ; Return from interrupt
                      00227 
                      00228 
                      00229 
                      00230 
                      00231 
Warning[205]: Found directive in column 1. (INCLUDE)
                      00232 INCLUDE "LCDIS.INC"     ; Include the LCD driver file
                      00001 ;--------------------------------------------------------------
                      00002 ;       LCDIS.INC               MPB     19-12-05
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00003 ;
                      00004 ;       Include file to operate 16x2 LCD display
                      00005 ;       Uses GPR 70 - 75
                      00006 ;       
                      00007 ;       Final version
                      00008 ;--------------------------------------------------------------
                      00009 
  00000070            00010 Timer1  EQU     70              ; 1ms count register
  00000071            00011 TimerX  EQU     71              ; Xms count register
  00000072            00012 Var     EQU     72              ; Output variable
  00000073            00013 Point   EQU     73              ; Program table pointer
  00000074            00014 Select  EQU     74              ; Used to set or clear RS bit
  00000075            00015 OutCod  EQU     75              ; Temp store for output code
                      00016 
  00000001            00017 RS      EQU     1               ; Register select output bit
  00000002            00018 E       EQU     2               ; Enable display input
                      00019 
                      00020 
                      00021 ;--------------------------------------------------------------
                      00022 ;       1ms delay with 1us cycle time (1000 cycles)
                      00023 ;--------------------------------------------------------------
0073   30F9           00024 onems   MOVLW   D'249'          ; Count for 1ms delay 
0074   00F0           00025         MOVWF   Timer1          ; Load count
0075   0000           00026 loop1   NOP                     ; Pad for 4 cycle loop
Message[305]: Using default destination of 1 (file).
0076   0BF0           00027         DECFSZ  Timer1          ; Count
0077   2???           00028         GOTO    loop1           ; until Z
0078   0008           00029         RETURN                  ; and finish
                      00030 
                      00031 ;--------------------------------------------------------------
                      00032 ;       Delay Xms
                      00033 ;       Receives count in W, uses Onems
                      00034 ;--------------------------------------------------------------
0079   00F1           00035 xms     MOVWF   TimerX          ; Count for X ms
007A   2???           00036 loopX   CALL    onems           ; Delay 1ms
Message[305]: Using default destination of 1 (file).
007B   0BF1           00037         DECFSZ  TimerX          ; Repeat X times 
007C   2???           00038         GOTO    loopX           ; until Z
007D   0008           00039         RETURN                  ; and finish
                      00040 
                      00041 ;--------------------------------------------------------------
                      00042 ;       Delay 1 seconds (1000ms) 
                      00043 ;       Uses xms
                      00044 ;--------------------------------------------------------------
                      00045 ; nested loop of xms since the maximum number can be in W is 255
007E   30FA           00046 onesecond       MOVLW   D'250'          ; Count for 1 second
007F   2???           00047         CALL    xms                     ; Delay 1 second
0080   30FA           00048         MOVLW   D'250'          ; Count for 1 second
0081   2???           00049         CALL    xms                     ; Delay 1 second
0082   30FA           00050         MOVLW   D'250'          ; Count for 1 second
0083   2???           00051         CALL    xms                     ; Delay 1 second
0084   30FA           00052         MOVLW   D'250'          ; Count for 1 second
0085   2???           00053         CALL    xms                     ; Delay 1 second
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0086   0008           00054         RETURN                          ; and finish
                      00055 
                      00056 ;--------------------------------------------------------------
                      00057 ;       xsecond delay
                      00058 ;       Receives count in W, uses onesecond
                      00059 ;--------------------------------------------------------------
0087   00F2           00060 xseconds        MOVWF   Var             ; Store count
0088   2???           00061 loopx   CALL    onesecond       ; Delay 1 second
Message[305]: Using default destination of 1 (file).
0089   0BF2           00062         DECFSZ  Var                     ; Repeat count times
008A   2???           00063         GOTO    loopx           ; until Z
008B   0008           00064         RETURN                          ; and finish
                      00065 
                      00066 ;--------------------------------------------------------------
                      00067 ;       Generate data/command clock siganl E
                      00068 ;--------------------------------------------------------------
008C   1508           00069 pulseE  BSF     PORTD,E         ; Set E high
008D   2???           00070         CALL    onems           ; Delay 1ms
008E   1108           00071         BCF     PORTD,E         ; Reset E low
008F   2???           00072         CALL    onems           ; Delay 1ms
0090   0008           00073         RETURN                  ; done
                      00074 
                      00075 ;--------------------------------------------------------------
                      00076 ;       Send a command byte in two nibbles from RB4 - RB7
                      00077 ;       Receives command in W, uses PulseE and Onems
                      00078 ;--------------------------------------------------------------
0091   00F5           00079 send    MOVWF   OutCod          ; Store output code
0092   39F0           00080         ANDLW   0F0             ; Clear low nybble
0093   0088           00081         MOVWF   PORTD           ; Output high nybble
0094   18F4           00082         BTFSC   Select,RS       ; Test RS bit
0095   1488           00083         BSF     PORTD,RS        ; and set for data
0096   2???           00084         CALL    pulseE          ; and clock display register
                      00085         ;CALL   onems           ; wait 1ms for display
                      00086 
Message[305]: Using default destination of 1 (file).
0097   0EF5           00087         SWAPF   OutCod          ; Swap low and high nybbles 
0098   0875           00088         MOVF    OutCod,W        ; Retrieve output code
0099   39F0           00089         ANDLW   0F0             ; Clear low nybble
009A   0088           00090         MOVWF   PORTD           ; Output low nybble
009B   18F4           00091         BTFSC   Select,RS       ; Test RS bit
009C   1488           00092         BSF     PORTD,RS        ; and set for data
009D   2???           00093         CALL    pulseE          ; and clock display register
                      00094         ;CALL   onems           ; wait 1ms for display
009E   0008           00095         RETURN                  ; done
                      00096 
                      00097 ;--------------------------------------------------------------
                      00098 ;       Initialise the display
                      00099 ;       Uses Send
                      00100 ;--------------------------------------------------------------
009F   3064           00101 inid    MOVLW   D'100'          ; Load count for 100ms delay
00A0   2???           00102         CALL    xms             ; and wait for display start
00A1   30F0           00103         MOVLW   0F0             ; Mask for select code
00A2   00F4           00104         MOVWF   Select          ; High nybble not masked
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00105 
00A3   3030           00106         MOVLW   0x30            ; Load initial nibble
00A4   0088           00107         MOVWF   PORTD           ; and output it to display
00A5   2???           00108         CALL    pulseE          ; Latch initial code
00A6   3005           00109         MOVLW   D'5'            ; Set delay 5ms
00A7   2???           00110         CALL    xms             ; and wait
00A8   2???           00111         CALL    pulseE          ; Latch initial code again
00A9   2???           00112         CALL    onems           ; Wait 1ms
00AA   2???           00113         CALL    pulseE          ; Latch initial code again
00AB   1208           00114         BCF     PORTD,4         ; Set 4-bit mode
00AC   2???           00115         CALL    pulseE          ; Latch it
                      00116         
00AD   3028           00117         MOVLW   0x28            ; Set 4-bit mode, 2 lines
00AE   2???           00118         CALL    send            ; and send code
00AF   3008           00119         MOVLW   0x08            ; Switch off display
00B0   2???           00120         CALL    send            ; and send code
00B1   3001           00121         MOVLW   0x01            ; Code to clear display
00B2   2???           00122         CALL    send            ; and send code
00B3   3006           00123         MOVLW   0x06            ; Enable cursor auto inc  
00B4   2???           00124         CALL    send            ; and send code
00B5   3080           00125         MOVLW   0x80            ; Zero display address
00B6   2???           00126         CALL    send            ; and send code
00B7   300C           00127         MOVLW   0x0C            ; Turn on display  
00B8   2???           00128         CALL    send            ; and send code
                      00129 
00B9   0008           00130         RETURN                  ; Done
                      00131 
                      00132 ;--------------------------------------------------------------
                      00233 ; Initialize the system ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
00BA                  00234 init:
                      00235     
00BA   1683 1303      00236     BANKSEL     TRISB           ; Select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BC   1406           00237     BSF TRISB, TRISB0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BD   0188           00238         CLRF    TRISD           ; LCD output port
                      00239 
00BE   1283 1303      00240         BANKSEL PORTD           ; Select bank 0
00C0   3001           00241         MOVLW   0x01
00C1   0188           00242         CLRF    PORTD           ; Clear display outputs
                      00243 
00C2   2???           00244     CALL    inid        ; Initialize LCD
                      00245 
00C3   3005           00246     MOVLW    0x05        ; number of times to blink
00C4   00B1           00247     MOVWF    count
                      00248 
                      00249     
00C5   2???           00250         GOTO    start           ; Jump to main program
                      00251 
                      00252 
                      00253     
                      00254 ; Main program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
00C6                  00255 start:
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C6   1283 1303      00256     BANKSEL PORTD               ; Select bank 0
00C8   0BB1           00257     DECFSZ  count, 1    ; Decrement the counter and skip if zero
00C9   2???           00258     GOTO   printWelcome ; make the print welcome blinking 3 times with 1 second delay
                      00259 
00CA   3003           00260     MOVLW       0x03       ; wait for 3 seconds
00CB   2???           00261     CALL        xseconds
                      00262 
00CC   2???           00263     CALL    clearDisplay    ; Clear the display and return the cursor to the home position
                      00264     
00CD   2???           00265     CALL    printNumber1     ; print "Number 1" on the LCD
                      00266     
00CE   2???           00267     CALL    initInterrupts  ; Initialize the interrupts and Timer0
00CF   2???           00268     CALL    resetTimer0     ; Reset Timer0
                      00269 
                      00270     
                      00271 
                      00272 
                      00273  
                      00274 
00D0                  00275 loop
00D0   2???           00276     GOTO loop
                      00277 
                      00278 
                      00279 ; Subroutines ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00280 
                      00281 ; Reset the system
00D1                  00282 resetSystem:
00D1   1283 1303      00283     BANKSEL PORTD               ; Select bank 0
00D3   10F4           00284     BCF    Select,RS    ; Select command mode
00D4   3001           00285     MOVLW    0x01           ; clear display
00D5   2???           00286     CALL    send            ; and send code
00D6   3080           00287     MOVLW       0x80        ; position to home cursor
00D7   2???           00288     CALL        send        ; and send code
                      00289 
00D8   2???           00290     CALL    printNumber1 ; print "Number 1" on the LCD
                      00291 
                      00292     ; initialize the interrupts
00D9   2???           00293     CALL    initInterrupts
00DA   2???           00294     CALL    resetTimer0
                      00295 
00DB   0008           00296     RETURN
                      00297 
                      00298     
                      00299 
                      00300 ; Clear the display and return the cursor to the home position
00DC                  00301 clearDisplay:
00DC   1283 1303      00302     BANKSEL PORTD               ; Select bank 0
00DE   10F4           00303     BCF     Select, RS       ; Select command mode
00DF   3001           00304     MOVLW    0x01           ; clear display
00E0   2???           00305     CALL    send            ; and send code
00E1   3080           00306     MOVLW       0x80        ; position to home cursor
00E2   2???           00307     CALL        send        ; and send code 
00E3   0008           00308     RETURN
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 
                      00310 ; Initialize the interrupts and Timer0
00E4                  00311 initInterrupts:
00E4   1283 1303      00312     BANKSEL INTCON
00E6   178B           00313     BSF INTCON, GIE     ; Enable global interrupt
00E7   160B           00314     BSF INTCON, INTE   ; Enable external interrupt on RB0 pin
00E8   168B           00315     BSF INTCON, TMR0IE  ; Enable Timer0 interrupt
                      00316 
                      00317     ; Initialize Timer0
00E9   1683 1303      00318     BANKSEL OPTION_REG
00EB   3007           00319     MOVLW b'00000111'   ; Set Timer0 prescaler to 1:256
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EC   0081           00320     MOVWF OPTION_REG 
                      00321 
00ED   0008           00322     RETURN
                      00323 
                      00324 
00EE                  00325 resetTimer0:
00EE   1283 1303      00326         BANKSEL PORTA
00F0   301E           00327         MOVLW D'30'
00F1   00B6           00328         MOVWF timerCounter
00F2   150B           00329         BSF INTCON, T0IF    ; Clear the TMR0 overflow interrupt flag
00F3   0008           00330         RETURN
                      00331 
                      00332 ; Write "Number 1" in the first line and make the cursor blinking on the second line
00F4                  00333 printNumber1:
00F4   1283 1303      00334     BANKSEL PORTD               ; Select bank 0
00F6   14F4           00335     BSF    Select,RS    ; Select data mode
00F7   304E           00336     MOVLW       'N'
00F8   2???           00337     CALL        send
00F9   3075           00338     MOVLW       'u'
00FA   2???           00339     CALL        send
00FB   306D           00340     MOVLW       'm'
00FC   2???           00341     CALL        send
00FD   3062           00342     MOVLW       'b'
00FE   2???           00343     CALL        send
00FF   3065           00344     MOVLW       'e'
0100   2???           00345     CALL        send
0101   3072           00346     MOVLW       'r'
0102   2???           00347     CALL        send
0103   3020           00348     MOVLW       ' '
0104   2???           00349     CALL        send
0105   3031           00350     MOVLW       '1'
0106   2???           00351     CALL        send
                      00352 
                      00353 
                      00354     ; move cursor to the second line
0107   10F4           00355     BCF     Select,RS   ; Select command mode
0108   30C0           00356     MOVLW       0xC0        ; position to home cursor
0109   00B7           00357     MOVWF   position    ; store the cursor position
010A   2???           00358     CALL        send        ; and send code
                      00359 
010B   3000           00360     MOVLW    0x00       ; current digit
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010C   00B0           00361     MOVWF    current_digit
                      00362     
010D   14F4           00363     BSF     Select,RS   ; Select data mode
010E   3030           00364     MOVLW    '0'        ; print the current digit
010F   2???           00365     CALL    send
                      00366 
                      00367     ; make the cursor pointing to the current digit
0110   10F4           00368     BCF     Select,RS   ; Select command mode
0111   0837           00369     MOVF    position, W
0112   2???           00370     CALL    send
                      00371 
                      00372     ; make the cursor blinking
0113   300F           00373     MOVLW       0x0F
0114   2???           00374     CALL        send
                      00375 
                      00376     ; set the state to 1
0115   3001           00377     MOVLW    0x01
0116   00B8           00378     MOVWF    state
                      00379     
0117   0008           00380     RETURN
                      00381 
                      00382 ; Write "2" instead of "1" in the first line and make the cursor blinking on the second line
0118                  00383 printNumber2:
0118   1283 1303      00384     BANKSEL PORTD               ; Select bank 0
011A   10F4           00385     BCF    Select,RS    ; Select command mode
011B   3087           00386     MOVLW       0x87        ;position the cursor to 8th position in the first line
011C   2???           00387     CALL        send        ; and send code
                      00388 
011D   14F4           00389     BSF    Select,RS    ; Select data mode
011E   3032           00390     MOVLW       '2'
011F   2???           00391     CALL        send
                      00392 
                      00393     ; return the cursor back to the second line to enter the second number
0120   10F4           00394     BCF     Select,RS   ; Select command mode
0121   0837           00395     MOVF    position, W ; move the cursor to previous position
0122   2???           00396     CALL    send
                      00397 
0123   0008           00398     RETURN
                      00399 
                      00400 ; Write "Result" in the first line
0124                  00401 printResult:
0124   1283 1303      00402     BANKSEL PORTD               ; Select bank 0
0126   10F4           00403     BCF    Select,RS    ; Select command mode
0127   3080           00404     MOVLW       0x80        ;position the cursor to the first position in the first line
0128   2???           00405     CALL        send        ; and send code
                      00406 
0129   14F4           00407     BSF    Select,RS    ; Select data mode
012A   3052           00408     MOVLW       'R'
012B   2???           00409     CALL        send
012C   3065           00410     MOVLW       'e'
012D   2???           00411     CALL        send
012E   3073           00412     MOVLW       's'
012F   2???           00413     CALL        send
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0130   3075           00414     MOVLW       'u'
0131   2???           00415     CALL        send
0132   306C           00416     MOVLW       'l'
0133   2???           00417     CALL        send
0134   3074           00418     MOVLW       't'
0135   2???           00419     CALL        send
0136   3020           00420     MOVLW    ' '
0137   2???           00421     CALL    send
0138   3020           00422     MOVLW    ' '
0139   2???           00423     CALL    send
                      00424 
                      00425     ; return the cursor back to the second line to print the result
013A   10F4           00426     BCF     Select,RS   ; Select command mode
013B   30C6           00427     MOVLW       0xC6        ;position the cursor to the 7th position in the second line
013C   2???           00428     CALL        send        ; and send code
                      00429     
013D   0008           00430     RETURN
                      00431 
                      00432 
                      00433 ; print welcome message on the LCD
013E                  00434 printWelcome:
                      00435     ; clear the display
013E   10F4           00436     BCF     Select, RS       ; Select command mode
013F   3001           00437     MOVLW    0x01           ; clear display
0140   2???           00438     CALL    send            ; and send code
0141   3080           00439     MOVLW       0x80        ; position to home cursor
0142   2???           00440         CALL    send        ; and send code 
0143   14F4           00441     BSF    Select,RS    ; Select data mode
                      00442 
                      00443     ; delay for 400ms to make the print blinking
Warning[202]: Argument out of range.  Least significant bits used.
0144   3090           00444     MOVLW   D'400'
0145   2???           00445     CALL    xms
                      00446 
                      00447     ; print "Welcome to" in the first line
0146   3057           00448     MOVLW       'W'             
0147   2???           00449     CALL        send            ; and send code
0148   3065           00450     MOVLW       'e'
0149   2???           00451     CALL        send
014A   306C           00452     MOVLW       'l'
014B   2???           00453     CALL        send
014C   3063           00454     MOVLW       'c'
014D   2???           00455     CALL        send
014E   306F           00456     MOVLW       'o'
014F   2???           00457     CALL        send
0150   306D           00458     MOVLW       'm'
0151   2???           00459     CALL        send
0152   3065           00460     MOVLW       'e'
0153   2???           00461     CALL        send
0154   3020           00462     MOVLW       ' '
0155   2???           00463     CALL        send
0156   3074           00464     MOVLW       't'
0157   2???           00465     CALL        send
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0158   306F           00466     MOVLW       'o'
0159   2???           00467     CALL        send
                      00468 
                      00469     ; move cursor to the second line
015A   10F4           00470     BCF     Select,RS   ; Select command mode
015B   30C0           00471     MOVLW       0xC0        ; position to home cursor
015C   2???           00472     CALL        send        ; and send code
015D   14F4           00473     BSF     Select,RS   ; Select data mode
                      00474     ; print "multiplication" in the second line
015E   306D           00475     MOVLW       'm'
015F   2???           00476     CALL        send
0160   3075           00477     MOVLW       'u'
0161   2???           00478     CALL        send
0162   306C           00479     MOVLW       'l'
0163   2???           00480     CALL        send
0164   3074           00481     MOVLW       't'
0165   2???           00482     CALL        send
0166   3069           00483     MOVLW       'i'
0167   2???           00484     CALL        send
0168   3070           00485     MOVLW       'p'
0169   2???           00486     CALL        send
016A   306C           00487     MOVLW       'l'
016B   2???           00488     CALL        send
016C   3069           00489     MOVLW       'i'
016D   2???           00490     CALL        send
016E   3063           00491     MOVLW       'c'
016F   2???           00492     CALL        send
0170   3061           00493     MOVLW       'a'
0171   2???           00494     CALL        send
0172   3074           00495     MOVLW       't'
0173   2???           00496     CALL        send
0174   3069           00497     MOVLW       'i'
0175   2???           00498     CALL        send
0176   306F           00499     MOVLW       'o'
0177   2???           00500     CALL        send
0178   306E           00501     MOVLW       'n'
0179   2???           00502     CALL        send
                      00503 
                      00504     ; delay for 1 second
017A   3001           00505     MOVLW       0x01
017B   2???           00506     CALL        xseconds
                      00507 
017C   2???           00508     GOTO    start 
                      00509 
                      00510 
                      00511 ; increment the current digit
017D                  00512 incrementCurrentDigit:
017D   1283 1303      00513     BANKSEL PORTA
017F   0AB0           00514     INCF    current_digit, F  ; Increment the current digit
                      00515     
0180   300A           00516     MOVLW   0x0A
0181   0230           00517     SUBWF   current_digit, W  ; Compare current digit with 10
0182   1903           00518     BTFSC   STATUS, Z         ; Skip next step if current digit is less than 10
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0183   01B0           00519     CLRF    current_digit     ; Reset the current digit to 0 if it 10 or more
0184   0008           00520     RETURN
                      00521 
                      00522 
                      00523 ; Calculate the multiplication of the first number by the tenth digit of the second number
0185                  00524 calculateSecondMultiplication:
0185   1283 1303      00525     BANKSEL PORTA
0187   01C1           00526     CLRF    res_unit
0188   01C2           00527     CLRF    res_tens
0189   01C3           00528     CLRF    res_hundreds
018A   01C4           00529     CLRF    res_thousands
                      00530 
                      00531 
                      00532     ; find the multiplication of num1_unit by num2_tens
018B   1283 1303      00533     BANKSEL num1_unit
018D   0833           00534     MOVF    num1_unit, W
018E   00C5           00535     MOVWF   x
018F   0834           00536     MOVF    num2_tens, W
0190   00C6           00537     MOVWF   y
0191   2???           00538     CALL    multiplication  ; find x * y and store the result in res_mult (2 bytes)
                      00539 
0192   1283 1303      00540     BANKSEL res_mult
                      00541     ; add res_mult to res_tens
0194   0847           00542     MOVF    res_mult, W
0195   07C2           00543     ADDWF   res_tens, F
                      00544     ; check if the number is largaer than 9
0196   0842           00545     MOVF    res_tens, W
0197   3C09           00546     SUBLW   0x09
0198   1C03           00547     BTFSS   STATUS, C
0199   2???           00548     CALL    handle_carry_tens
                      00549 
                      00550 
                      00551 
                      00552     ; add res_mult+1 to res_hundreds
019A   0848           00553     MOVF    res_mult+1, W
019B   07C3           00554     ADDWF   res_hundreds, F
                      00555     ; check if the number is largaer than 9
019C   0843           00556     MOVF    res_hundreds, W
019D   3C09           00557     SUBLW   0x09
019E   1C03           00558     BTFSS   STATUS, C
019F   2???           00559     CALL    handle_carry_hundreds
                      00560 
                      00561 
                      00562     ; find the multiplication of num1_tens by num2_unit
01A0   0832           00563     MOVF    num1_tens, W
01A1   00C5           00564     MOVWF   x
01A2   0834           00565     MOVF    num2_tens, W
01A3   00C6           00566     MOVWF   y
01A4   2???           00567     CALL    multiplication  ; find x * y and store the result in res_mult (2 bytes)
                      00568 
                      00569     ; add res_mult[0] to res_hundreds 
01A5   1283 1303      00570     BANKSEL res_mult
01A7   0847           00571     MOVF    res_mult, W
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A8   07C3           00572     ADDWF   res_hundreds, F
                      00573     ; check if the number is largaer than 9
01A9   0843           00574     MOVF    res_hundreds, W
01AA   3C09           00575     SUBLW   0x09
01AB   1C03           00576     BTFSS   STATUS, C
01AC   2???           00577     CALL    handle_carry_hundreds
                      00578 
                      00579 
                      00580     ; add res_mult[1] to res_thousands
01AD   0848           00581     MOVF    res_mult+1, W
01AE   07C4           00582     ADDWF   res_thousands, F
                      00583     
                      00584 
                      00585     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00586     ; auxiliary part
                      00587     ; find the multiplication of num1_unit by num2_unit
01AF   1283 1303      00588     BANKSEL num1_unit
01B1   0833           00589     MOVF    num1_unit, W
01B2   00C5           00590     MOVWF   x
01B3   0835           00591     MOVF    num2_unit, W
01B4   00C6           00592     MOVWF   y
01B5   2???           00593     CALL    multiplication  ; find x * y and store the result in res_mult (2 bytes)
                      00594 
                      00595     ; save res_mult[0] in res_unit 
01B6   1283 1303      00596     BANKSEL res_unit
01B8   0847           00597     MOVF    res_mult, W
01B9   07C1           00598     ADDWF   res_unit, F
                      00599 
                      00600     ; add res_mult[1] to res_tens
01BA   0848           00601     MOVF    res_mult+1, W
01BB   07C2           00602     ADDWF   res_tens, F
                      00603     ; check if the number is largaer than 9
01BC   0842           00604     MOVF    res_tens, W
01BD   3C09           00605     SUBLW   0x09
01BE   1C03           00606     BTFSS   STATUS, C
01BF   2???           00607     CALL    handle_carry_tens
                      00608 
                      00609     ; find the multiplication of num1_tens by num2_unit
01C0   1283 1303      00610     BANKSEL num1_tens
01C2   0832           00611     MOVF    num1_tens, W
01C3   00C5           00612     MOVWF   x
01C4   0835           00613     MOVF    num2_unit, W
01C5   00C6           00614     MOVWF   y
01C6   2???           00615     CALL    multiplication  ; find x * y and store the result in res_mult (2 bytes)
                      00616 
01C7   1283 1303      00617     BANKSEL res_mult
                      00618     ; add res_mult[0] to res_tens 
01C9   0847           00619     MOVF    res_mult, W
01CA   07C2           00620     ADDWF   res_tens, F
                      00621     ; check if the number is largaer than 9
01CB   0842           00622     MOVF    res_tens, W
01CC   3C09           00623     SUBLW   0x09
01CD   1C03           00624     BTFSS   STATUS, C
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01CE   2???           00625     CALL    handle_carry_tens
                      00626 
                      00627     ; add res_mult[1] to res_hundreds
01CF   0848           00628     MOVF    res_mult+1, W
01D0   07C3           00629     ADDWF   res_hundreds, F
                      00630     ; check if the number is largaer than 9
01D1   0843           00631     MOVF    res_hundreds, W
01D2   3C09           00632     SUBLW   0x09
01D3   1C03           00633     BTFSS   STATUS, C
01D4   2???           00634     CALL    handle_carry_hundreds
                      00635 
                      00636     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00637     ;print the result on the LCD
01D5   1283 1303      00638     BANKSEL PORTD               ; Select bank 0
01D7   14F4           00639     BSF    Select,RS    ; Select data mode
01D8   0844           00640     MOVF   res_thousands, W
01D9   3E30           00641     ADDLW  0x30
01DA   2???           00642     CALL   send
01DB   0843           00643     MOVF   res_hundreds, W
01DC   3E30           00644     ADDLW  0x30
01DD   2???           00645     CALL   send
01DE   0842           00646     MOVF   res_tens, W
01DF   3E30           00647     ADDLW  0x30
01E0   2???           00648     CALL   send
01E1   0841           00649     MOVF   res_unit, W
01E2   3E30           00650     ADDLW  0x30
01E3   2???           00651     CALL   send
                      00652 
                      00653 
01E4   2???           00654     GOTO    backFromMult
                      00655 
                      00656     
                      00657 ; handle the carry if res_tens is larger than 9
01E5                  00658 handle_carry_tens:
01E5   300A           00659     MOVLW   0x0A            
01E6   02C2           00660     SUBWF   res_tens, F         ; subtract 10 from res_tens
01E7   0AC3           00661     INCF    res_hundreds, F     ; increment res_hundreds
01E8   0008           00662     RETURN  
                      00663 
                      00664 ; handle the carry if res_hundreds is larger than 9
01E9                  00665 handle_carry_hundreds:
01E9   300A           00666     MOVLW   0x0A
01EA   02C3           00667     SUBWF   res_hundreds, F     ; subtract 10 from res_hundreds
01EB   0FC4           00668     INCFSZ  res_thousands, F    ; increment res_thousands
01EC   0008           00669     RETURN
                      00670 
                      00671 
                      00672 
                      00673 ; multiply value of x and y and store the result in res_mult
01ED                  00674 multiplication:
01ED   1283 1303      00675     BANKSEL res_mult
01EF   01C7           00676     CLRF    res_mult
01F0   01C8           00677     CLRF    res_mult+1
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00678 
01F1   0846           00679     MOVF    y, W
01F2   1903           00680     BTFSC   STATUS, Z   
01F3   2???           00681     GOTO    mult_end    ; If y is zero, return
                      00682          
                      00683 
01F4                  00684 mult_loop:
01F4   0845           00685     MOVF    x, W       
01F5   07C7           00686     ADDWF   res_mult, F     ; Add x to the result
                      00687     
                      00688     ; check if the number is largaer than 9
01F6   0847           00689     MOVF   res_mult, W
01F7   3C09           00690     SUBLW   0x09
01F8   1C03           00691     BTFSS   STATUS, C
01F9   2???           00692     GOTO    fix_overflow
01FA   0BC6           00693     DECFSZ  y, F            ; decrement y
01FB   2???           00694     GOTO    mult_loop       ; repeat the loop
01FC   2???           00695     GOTO    mult_end
                      00696 
01FD                  00697 fix_overflow:
01FD   1283 1303      00698     BANKSEL res_mult
                      00699     ; if the number is larger than 9, subtract 10 from it and increment the next byte 
                      00700     ; BSF     Select, RS
                      00701     ; MOVLW   '#'
                      00702     ; CALL    send
01FF   300A           00703     MOVLW   0x0A                       
0200   02C7           00704     SUBWF   res_mult, F
0201   0AC8           00705     INCF    res_mult+1, F
0202   0BC6           00706     DECFSZ  y, F            ; decrement y
0203   2???           00707     GOTO    mult_loop       ; repeat the loop    
0204   2???           00708     GOTO    mult_end 
                      00709 
0205                  00710 mult_end:
                      00711 
                      00712 
0205   0008           00713     RETURN
                      00714    
                      00715 
Warning[205]: Found directive in column 1. (END)
3731                  00716 END
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CKE                               00000006
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
E                                 00000002
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
NOT_A                             00000005
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OutCod                            00000075
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Point                             00000073
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                00000001
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Select                            00000074
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Timer1                            00000070
TimerX                            00000071
UA                                00000001
Var                               00000072
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001
__DEBUG                           1
backFromMult                      00000060
buttonInterrupt                   00000008
calculateSecondMultiplication     00000185
clearDisplay                      000000DC
count                             00000031
current_digit                     00000030
fix_overflow                      000001FD
handle_carry_hundreds             000001E9
handle_carry_tens                 000001E5
incrementCurrentDigit             0000017D
inid                              0000009F
init                              000000BA
initInterrupts                    000000E4
loop                              000000D0
loop1                             00000075
loopX                             0000007A
loopx                             00000088
MPASM  5.43                        MASTER.ASM   2-14-2024  13:14:19         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

mult_end                          00000205
mult_loop                         000001F4
multiplication                    000001ED
num1_tens                         00000032
num1_unit                         00000033
num2_tens                         00000034
num2_unit                         00000035
onems                             00000073
onesecond                         0000007E
position                          00000037
printNumber1                      000000F4
printNumber2                      00000118
printResult                       00000124
printWelcome                      0000013E
pulseE                            0000008C
res_hundreds                      00000043
res_mult                          00000047
res_tens                          00000042
res_thousands                     00000044
res_unit                          00000041
resetCurrentDigit                 00000061
resetSystem                       000000D1
resetTimer0                       000000EE
saveNum1Tens                      0000002E
saveNum1Unit                      00000035
saveNum2Tens                      00000043
saveNum2Unit                      0000004A
send                              00000091
skip                              0000006B
start                             000000C6
state                             00000038
timerCounter                      00000036
timerInterrupt                    0000001A
x                                 00000045
xms                               00000079
xseconds                          00000087
y                                 00000046

Errors   :     0
Warnings :    19 reported,     0 suppressed
Messages :     8 reported,     0 suppressed

