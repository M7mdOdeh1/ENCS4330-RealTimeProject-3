MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;
                      00003 ;   Project:   Simple Calculator   
                      00004 ;   File:   master.asm
                      00005 ;   Date:   2024-02-15
                      00006 ;   -----------------------------------
                      00007 ;   Authors:   Mohammed Owda
                      00008 ;              Mahmoud Hamdan
                      00009 ;              Yazeed Hamdan
                      00010 ;              Mohammad AbuShams
                      00011 ;   -----------------------------------
                      00012 ;   Inputs and Outputs:
                      00013 ;   Input:  2 numbers x 2 digits
                      00014 ;       Integer handling only  
                      00015 ;   Multiplication only
                      00016 ;   Output: 4 digits number
                      00017 ;   -----------------------------------
                      00018 ;   Description:
                      00019 ;   Master CPU will handle the Multiplication of the first number by the tenth digit of the second numbe
                            r
                      00020 ;   Auxiliary CPU will handle the Multiplication of the first number by the unit digit of the second num
                            ber
                      00021 ;
                      00022 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00023            
                      00024     PROCESSOR 16F877A
                      00025     ;   Clock = XT 4MHz, standard fuse settings
                      00026 
                      00027     INCLUDE "P16F877A.INC"      ; Include the 16F877 header file
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2011 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00564         LIST
                      00028     
2007   3731           00029         __CONFIG 0x3731 ; 00011011100110001
                      00030 
                      00031     
                      00032 ; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00033     ;
Warning[207]: Found label after column 1. (current_digit)
  00000030            00034     current_digit   EQU 30    ; Current digit to be incremented
Warning[207]: Found label after column 1. (count)
  00000031            00035     count           EQU 31            ; Counter
Warning[207]: Found label after column 1. (num1_tens)
  00000032            00036     num1_tens       EQU 32        ; Tens digit of the first number
Warning[207]: Found label after column 1. (num1_unit)
  00000033            00037     num1_unit       EQU 33        ; Unit digit of the first number
Warning[207]: Found label after column 1. (num2_tens)
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000034            00038     num2_tens       EQU 34        ; Tens digit of the second number
Warning[207]: Found label after column 1. (num2_unit)
  00000035            00039     num2_unit       EQU 35        ; Unit digit of the second number
Warning[207]: Found label after column 1. (timerCounter)
  00000036            00040     timerCounter    EQU 36     ; Custom timer counter for 2-second detection
Warning[207]: Found label after column 1. (position)
  00000037            00041     position        EQU 37         ; Cursor position for the digit to be displayed
Warning[207]: Found label after column 1. (state)
  00000038            00042     state           EQU 38            ; State of input(1: first digit, 2: second digit, 4: third digit, 
                            8: fourth digit, 16: finished)
Warning[207]: Found label after column 1. (temp1)
  00000039            00043     temp1           EQU 39            ; Temp variable to save the result of the multiplication from mast
                            er CPU
Warning[207]: Found label after column 1. (temp2)
  00000040            00044     temp2           EQU 40            ; Temp variable to save the result of the multiplication from mast
                            er CPU
Warning[207]: Found label after column 1. (temp3)
  00000041            00045     temp3           EQU 41            ; Temp variable to save the result of the multiplication from mast
                            er CPU
Warning[207]: Found label after column 1. (tempAux2)
  00000042            00046     tempAux2        EQU 42            ; temp variable to save the result of the multiplication from the 
                            auxiliary CPU
Warning[207]: Found label after column 1. (tempAux3)
  00000043            00047     tempAux3        EQU 43            ; temp variable to save the result of the multiplication from the 
                            auxiliary CPU
Warning[207]: Found label after column 1. (res_unit)
  00000042            00048     res_unit        EQU 42            ; Unit digit of the result
Warning[207]: Found label after column 1. (res_tens)
  00000043            00049     res_tens        EQU 43            ; Tens digit of the result
Warning[207]: Found label after column 1. (res_hundreds)
  00000044            00050     res_hundreds    EQU 44            ; Hundreds digit of the result
Warning[207]: Found label after column 1. (res_thousands)
  00000045            00051     res_thousands   EQU 45            ; Thousands digit of the result
Warning[207]: Found label after column 1. (x)
  00000046            00052     x          EQU 46            ; Temp to put the first digit of multiplication operation
Warning[207]: Found label after column 1. (y)
  00000047            00053     y          EQU 47            ; Temp to put the second digit of multiplication operation
Warning[207]: Found label after column 1. (res_mult)
  00000048            00054     res_mult        EQU 48            ; 2 bytes to save the result of the multiplication
                      00055 
                      00056 
                      00057 ; Program Begins ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00058 
                      00059     ORG 0x00    ; Default start address 
0000   0000           00060     NOP         ; required for ICD mode
0001   2???           00061     GOTO    init
                      00062     
                      00063 
                      00064 ; Interrupt vector location ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00065     ORG 0x04            ; Interrupt vector location
0004   0000           00066     NOP
0005   138B           00067     BCF     INTCON, GIE    ; disable global interrupt during the interrupt
0006   1C8B           00068     BTFSS   INTCON, INTF       ; Check if the interrupt is from INT0
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007   2???           00069     GOTO    timerInterrupt   ; Jump to Timer0 interrupt
                      00070 
0008                  00071 buttonInterrupt:
                      00072     ; check if the state is 16 (the button is pressed after the result is displayed, so we need to reset
                             the system)
0008   1283 1303      00073     BANKSEL state
000A   1A38           00074     BTFSC   state, 4
000B   2???           00075     GOTO    resetSystem
                      00076 
                      00077 
                      00078 
000C   2???           00079     CALL incrementCurrentDigit  ; increment the current digit
                      00080     
000D   1283 1303      00081     BANKSEL current_digit
000F   0830           00082     MOVF    current_digit, W      ; Move the current digit to W
0010   3E30           00083     ADDLW   0x30
0011   14F4           00084     BSF     Select,RS           ; Select data mode
0012   2???           00085     CALL    send                ; Send the current digit to the LCD
                      00086 
                      00087     ; move cursor to the current digit
0013   10F4           00088     BCF     Select,RS   ; Select command mode
0014   0837           00089     MOVF    position, W
0015   2???           00090     CALL    send
                      00091 
0016   2???           00092     CALL    resetTimer0            ; Reset Timer0
0017   108B           00093     BCF     INTCON, INTF            ; Clear the interrupt flag
0018   178B           00094     BSF     INTCON, GIE             ; enable global interrupt
0019   0009           00095     RETFIE
                      00096 
                      00097 
                      00098 
                      00099 ; Timer Interrupt Service Routine for 2-second delay detection
001A                  00100 timerInterrupt:
001A   1283 1303      00101     BANKSEL INTCON
                      00102         
001C   1283 1303      00103         BANKSEL PORTA
Message[305]: Using default destination of 1 (file).
001E   0BB6           00104         DECFSZ  timerCounter    ; Decrement the timer counter and check if 2 seconds have passed
001F   2???           00105     GOTO        skip            ; Skip the next step if 2 seconds have not passed
                      00106 
                      00107     ; if 2 seconds have passed 
                      00108 
0020   0AB7           00109     INCF    position, F     ; increment the cursor position to move the cursor to the next digit
0021   10F4           00110     BCF     Select,RS       ; Select command mode
0022   0837           00111     MOVF    position, W
0023   2???           00112     CALL    send            ; move cursor to the next digit
                      00113 
                      00114     ;
                      00115 
                      00116     ; check state to save the current digit in the appropriate variable
0024   1283 1303      00117     BANKSEL state
0026   1838           00118     BTFSC   state, 0          ; check if the state is 1(first digit of the first number)
0027   2???           00119     GOTO    saveNum1Tens
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0028   18B8           00120     BTFSC   state, 1          ; check if the state is 2(second digit of the first number)
0029   2???           00121     GOTO    saveNum1Unit    
002A   1938           00122     BTFSC   state, 2          ; check if the state is 4(first digit of the second number)
002B   2???           00123     GOTO    saveNum2Tens    
002C   19B8           00124     BTFSC   state, 3          ; check if the state is 8(second digit of the second number)
002D   2???           00125     GOTO    saveNum2Unit
                      00126 
                      00127 ;--------------------------------------------------------------------------------------------
                      00128 
                      00129 ; save the current digit in num1_tens
002E                  00130 saveNum1Tens:
002E   1283 1303      00131     BANKSEL num1_tens
0030   0830           00132     MOVF    current_digit, W
0031   00B2           00133     MOVWF   num1_tens       ; save the current digit in num1_tens
                      00134 
0032   3002           00135     MOVLW   0x02
0033   00B8           00136     MOVWF   state          ; change the state to 2 (entering the 2nd digit of the first number)
                      00137 
0034   2???           00138     GOTO    resetCurrentDigit
                      00139 
                      00140 ; save the current digit in num1_unit
0035                  00141 saveNum1Unit:
0035   1283 1303      00142     BANKSEL num1_unit
0037   0830           00143     MOVF    current_digit, W
0038   00B3           00144     MOVWF   num1_unit       ; save the current digit in num1_unit
                      00145 
0039   3004           00146     MOVLW    0x04    
003A   00B8           00147     MOVWF    state          ; change the state to 4 (entering the 1st digit of the second number)
                      00148 
                      00149     ; print "x" on the LCD
003B   1283 1303      00150     BANKSEL PORTD               ; Select bank 0
003D   14F4           00151     BSF    Select,RS    ; Select data mode
003E   3078           00152     MOVLW       'x'
003F   2???           00153     CALL        send
                      00154 
                      00155     ; increment the cursor position
0040   0AB7           00156     INCF    position, F     ; increment the cursor position to move the cursor to the next digit
                      00157 
0041   2???           00158     CALL    printNumber2     ; print "Number 2" on the LCD on the first line
                      00159 
0042   2???           00160     GOTO    resetCurrentDigit
                      00161 
                      00162 ; save the current digit in num2_tens
0043                  00163 saveNum2Tens:
0043   1283 1303      00164     BANKSEL num2_tens
0045   0830           00165     MOVF    current_digit, W
0046   00B4           00166     MOVWF   num2_tens       ; save the current digit in num2_tens
                      00167 
0047   3008           00168     MOVLW    0x08
0048   00B8           00169     MOVWF    state          ; change the state to 8 (entering the 2nd digit of the second number)
                      00170 
0049   2???           00171     GOTO    resetCurrentDigit
                      00172 
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00173 ; save the current digit in num2_unit
004A                  00174 saveNum2Unit:
004A   1283 1303      00175     BANKSEL num2_unit
004C   0830           00176     MOVF    current_digit, W
004D   00B5           00177     MOVWF   num2_unit       ; save the current digit in num2_unit
                      00178 
004E   3010           00179     MOVLW    0x10
004F   00B8           00180     MOVWF    state          ; change the state to 16 (finished entering the second number)
                      00181 
                      00182     ; print "=" on the LCD
0050   1283 1303      00183     BANKSEL PORTD               ; Select bank 0
0052   14F4           00184     BSF    Select,RS    ; Select data mode
0053   303D           00185     MOVLW       '='
0054   2???           00186     CALL        send
                      00187 
0055   2???           00188     CALL    printResult ; print "Result" on the LCD on the first line
                      00189 
                      00190     ; hide the cursor
0056   10F4           00191     BCF     Select,RS   ; Select command mode
0057   300C           00192     MOVLW       0x0C
0058   2???           00193     CALL        send
                      00194 
                      00195     ; disable the Timer0 interrupt
0059   1283 1303      00196     BANKSEL INTCON
005B   128B           00197     BCF     INTCON, TMR0IE  ; Disable Timer0 interrupt
                      00198 
005C   1283 1303      00199     BANKSEL TMR0        
005E   0181           00200         CLRF    TMR0           ; Clear Timer0
                      00201 
                      00202     ; calculate the multiplication of the first number by the tenth digit of the second number
005F   2???           00203     GOTO    calculateSecondMultiplication
0060                  00204 backFromMult:
                      00205 
0060   0009           00206     RETFIE
                      00207 
                      00208 ;--------------------------------------------------------------------------------------------
                      00209 
0061                  00210 resetCurrentDigit:
0061   1283 1303      00211     BANKSEL PORTD               ; Select bank 0
0063   01B0           00212     CLRF    current_digit      ; Reset the current digit to 0
0064   14F4           00213     BSF     Select,RS   ; Select data mode
0065   3030           00214     MOVLW       '0'         ; print the current digit
0066   2???           00215     CALL        send
                      00216 
                      00217     ; make the cursor pointing to the current digit
0067   10F4           00218     BCF     Select,RS   ; Select command mode
0068   0837           00219     MOVF    position, W
0069   2???           00220     CALL    send
006A   2???           00221     CALL    resetTimer0            ; Reset Timer0
                      00222 
                      00223 
006B                  00224 skip:
006B   1283 1303      00225     BANKSEL INTCON
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006D   178B           00226     BSF     INTCON, GIE     ; enable global interrupt
006E   110B           00227     BCF     INTCON, T0IF    ; Clear TMR0 overflow flag
006F   1283 1303      00228     BANKSEL TMR0        
0071   0181           00229         CLRF    TMR0           ; Clear Timer0
                      00230     
0072   0009           00231     RETFIE              ; Return from interrupt
                      00232 
                      00233 
                      00234 
                      00235 
                      00236 
Warning[205]: Found directive in column 1. (INCLUDE)
                      00237 INCLUDE "LCDIS.INC"     ; Include the LCD driver file
                      00001 ;--------------------------------------------------------------
                      00002 ;       LCDIS.INC               MPB     19-12-05
                      00003 ;
                      00004 ;       Include file to operate 16x2 LCD display
                      00005 ;       Uses GPR 70 - 75
                      00006 ;       
                      00007 ;       Final version
                      00008 ;--------------------------------------------------------------
                      00009 
  00000070            00010 Timer1  EQU     70              ; 1ms count register
  00000071            00011 TimerX  EQU     71              ; Xms count register
  00000072            00012 Var     EQU     72              ; Output variable
  00000073            00013 Point   EQU     73              ; Program table pointer
  00000074            00014 Select  EQU     74              ; Used to set or clear RS bit
  00000075            00015 OutCod  EQU     75              ; Temp store for output code
                      00016 
  00000001            00017 RS      EQU     1               ; Register select output bit
  00000002            00018 E       EQU     2               ; Enable display input
                      00019 
                      00020 
                      00021 ;--------------------------------------------------------------
                      00022 ;       1ms delay with 1us cycle time (1000 cycles)
                      00023 ;--------------------------------------------------------------
0073   30F9           00024 onems   MOVLW   D'249'          ; Count for 1ms delay 
0074   00F0           00025         MOVWF   Timer1          ; Load count
0075   0000           00026 loop1   NOP                     ; Pad for 4 cycle loop
Message[305]: Using default destination of 1 (file).
0076   0BF0           00027         DECFSZ  Timer1          ; Count
0077   2???           00028         GOTO    loop1           ; until Z
0078   0008           00029         RETURN                  ; and finish
                      00030 
                      00031 ;--------------------------------------------------------------
                      00032 ;       Delay Xms
                      00033 ;       Receives count in W, uses Onems
                      00034 ;--------------------------------------------------------------
0079   00F1           00035 xms     MOVWF   TimerX          ; Count for X ms
007A   2???           00036 loopX   CALL    onems           ; Delay 1ms
Message[305]: Using default destination of 1 (file).
007B   0BF1           00037         DECFSZ  TimerX          ; Repeat X times 
007C   2???           00038         GOTO    loopX           ; until Z
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007D   0008           00039         RETURN                  ; and finish
                      00040 
                      00041 ;--------------------------------------------------------------
                      00042 ;       Delay 1 seconds (1000ms) 
                      00043 ;       Uses xms
                      00044 ;--------------------------------------------------------------
                      00045 ; nested loop of xms since the maximum number can be in W is 255
007E   30FA           00046 onesecond       MOVLW   D'250'          ; Count for 1 second
007F   2???           00047         CALL    xms                     ; Delay 1 second
0080   30FA           00048         MOVLW   D'250'          ; Count for 1 second
0081   2???           00049         CALL    xms                     ; Delay 1 second
0082   30FA           00050         MOVLW   D'250'          ; Count for 1 second
0083   2???           00051         CALL    xms                     ; Delay 1 second
0084   30FA           00052         MOVLW   D'250'          ; Count for 1 second
0085   2???           00053         CALL    xms                     ; Delay 1 second
0086   0008           00054         RETURN                          ; and finish
                      00055 
                      00056 ;--------------------------------------------------------------
                      00057 ;       xsecond delay
                      00058 ;       Receives count in W, uses onesecond
                      00059 ;--------------------------------------------------------------
0087   00F2           00060 xseconds        MOVWF   Var             ; Store count
0088   2???           00061 loopx   CALL    onesecond       ; Delay 1 second
Message[305]: Using default destination of 1 (file).
0089   0BF2           00062         DECFSZ  Var                     ; Repeat count times
008A   2???           00063         GOTO    loopx           ; until Z
008B   0008           00064         RETURN                          ; and finish
                      00065 
                      00066 ;--------------------------------------------------------------
                      00067 ;       Generate data/command clock siganl E
                      00068 ;--------------------------------------------------------------
008C   1508           00069 pulseE  BSF     PORTD,E         ; Set E high
008D   2???           00070         CALL    onems           ; Delay 1ms
008E   1108           00071         BCF     PORTD,E         ; Reset E low
008F   2???           00072         CALL    onems           ; Delay 1ms
0090   0008           00073         RETURN                  ; done
                      00074 
                      00075 ;--------------------------------------------------------------
                      00076 ;       Send a command byte in two nibbles from RB4 - RB7
                      00077 ;       Receives command in W, uses PulseE and Onems
                      00078 ;--------------------------------------------------------------
0091   00F5           00079 send    MOVWF   OutCod          ; Store output code
0092   39F0           00080         ANDLW   0F0             ; Clear low nybble
0093   0088           00081         MOVWF   PORTD           ; Output high nybble
0094   18F4           00082         BTFSC   Select,RS       ; Test RS bit
0095   1488           00083         BSF     PORTD,RS        ; and set for data
0096   2???           00084         CALL    pulseE          ; and clock display register
                      00085         ;CALL   onems           ; wait 1ms for display
                      00086 
Message[305]: Using default destination of 1 (file).
0097   0EF5           00087         SWAPF   OutCod          ; Swap low and high nybbles 
0098   0875           00088         MOVF    OutCod,W        ; Retrieve output code
0099   39F0           00089         ANDLW   0F0             ; Clear low nybble
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009A   0088           00090         MOVWF   PORTD           ; Output low nybble
009B   18F4           00091         BTFSC   Select,RS       ; Test RS bit
009C   1488           00092         BSF     PORTD,RS        ; and set for data
009D   2???           00093         CALL    pulseE          ; and clock display register
                      00094         ;CALL   onems           ; wait 1ms for display
009E   0008           00095         RETURN                  ; done
                      00096 
                      00097 ;--------------------------------------------------------------
                      00098 ;       Initialise the display
                      00099 ;       Uses Send
                      00100 ;--------------------------------------------------------------
009F   3064           00101 inid    MOVLW   D'100'          ; Load count for 100ms delay
00A0   2???           00102         CALL    xms             ; and wait for display start
00A1   30F0           00103         MOVLW   0F0             ; Mask for select code
00A2   00F4           00104         MOVWF   Select          ; High nybble not masked
                      00105 
00A3   3030           00106         MOVLW   0x30            ; Load initial nibble
00A4   0088           00107         MOVWF   PORTD           ; and output it to display
00A5   2???           00108         CALL    pulseE          ; Latch initial code
00A6   3005           00109         MOVLW   D'5'            ; Set delay 5ms
00A7   2???           00110         CALL    xms             ; and wait
00A8   2???           00111         CALL    pulseE          ; Latch initial code again
00A9   2???           00112         CALL    onems           ; Wait 1ms
00AA   2???           00113         CALL    pulseE          ; Latch initial code again
00AB   1208           00114         BCF     PORTD,4         ; Set 4-bit mode
00AC   2???           00115         CALL    pulseE          ; Latch it
                      00116         
00AD   3028           00117         MOVLW   0x28            ; Set 4-bit mode, 2 lines
00AE   2???           00118         CALL    send            ; and send code
00AF   3008           00119         MOVLW   0x08            ; Switch off display
00B0   2???           00120         CALL    send            ; and send code
00B1   3001           00121         MOVLW   0x01            ; Code to clear display
00B2   2???           00122         CALL    send            ; and send code
00B3   3006           00123         MOVLW   0x06            ; Enable cursor auto inc  
00B4   2???           00124         CALL    send            ; and send code
00B5   3080           00125         MOVLW   0x80            ; Zero display address
00B6   2???           00126         CALL    send            ; and send code
00B7   300C           00127         MOVLW   0x0C            ; Turn on display  
00B8   2???           00128         CALL    send            ; and send code
                      00129 
00B9   0008           00130         RETURN                  ; Done
                      00131 
                      00132 ;--------------------------------------------------------------
                      00238 ; Initialize the system ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
00BA                  00239 init:
                      00240     
00BA   1683 1303      00241     BANKSEL     TRISB           ; Select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BC   1406           00242     BSF TRISB, TRISB0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BD   0188           00243         CLRF    TRISD           ; LCD output port
                      00244 
00BE   1283 1303      00245         BANKSEL PORTD           ; Select bank 0
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C0   3001           00246         MOVLW   0x01
00C1   0188           00247         CLRF    PORTD           ; Clear display outputs
                      00248 
00C2   2???           00249     CALL    inid        ; Initialize LCD
                      00250 
00C3   3005           00251     MOVLW    0x05        ; number of times to blink
00C4   00B1           00252     MOVWF    count
                      00253 
                      00254     
00C5   2???           00255         GOTO    start           ; Jump to main program
                      00256 
                      00257 
                      00258     
                      00259 ; Main program ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
00C6                  00260 start:
00C6   1283 1303      00261     BANKSEL PORTD               ; Select bank 0
00C8   0BB1           00262     DECFSZ  count, 1    ; Decrement the counter and skip if zero
00C9   2???           00263     GOTO   printWelcome ; make the print welcome blinking 3 times with 1 second delay
                      00264 
00CA   3003           00265     MOVLW       0x03       ; wait for 3 seconds
00CB   2???           00266     CALL        xseconds
                      00267 
00CC   2???           00268     CALL    clearDisplay    ; Clear the display and return the cursor to the home position
                      00269     
00CD   2???           00270     CALL    printNumber1     ; print "Number 1" on the LCD
                      00271     
00CE   2???           00272     CALL    initInterrupts  ; Initialize the interrupts and Timer0
00CF   2???           00273     CALL    resetTimer0     ; Reset Timer0
                      00274 
                      00275     
                      00276 
                      00277 
                      00278  
                      00279 
00D0                  00280 loop
00D0   2???           00281     GOTO loop
                      00282 
                      00283 
                      00284 ; Subroutines ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00285 
                      00286 ; Reset the system
00D1                  00287 resetSystem:
00D1   1283 1303      00288     BANKSEL PORTD               ; Select bank 0
00D3   10F4           00289     BCF    Select,RS    ; Select command mode
00D4   3001           00290     MOVLW    0x01           ; clear display
00D5   2???           00291     CALL    send            ; and send code
00D6   3080           00292     MOVLW       0x80        ; position to home cursor
00D7   2???           00293     CALL        send        ; and send code
                      00294 
00D8   2???           00295     CALL    printNumber1 ; print "Number 1" on the LCD
                      00296 
                      00297     ; initialize the interrupts
00D9   2???           00298     CALL    initInterrupts
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DA   2???           00299     CALL    resetTimer0
                      00300 
00DB   0008           00301     RETURN
                      00302 
                      00303     
                      00304 
                      00305 ; Clear the display and return the cursor to the home position
00DC                  00306 clearDisplay:
00DC   1283 1303      00307     BANKSEL PORTD               ; Select bank 0
00DE   10F4           00308     BCF     Select, RS       ; Select command mode
00DF   3001           00309     MOVLW    0x01           ; clear display
00E0   2???           00310     CALL    send            ; and send code
00E1   3080           00311     MOVLW       0x80        ; position to home cursor
00E2   2???           00312     CALL        send        ; and send code 
00E3   0008           00313     RETURN
                      00314 
                      00315 ; Initialize the interrupts and Timer0
00E4                  00316 initInterrupts:
00E4   1283 1303      00317     BANKSEL INTCON
00E6   178B           00318     BSF INTCON, GIE     ; Enable global interrupt
00E7   160B           00319     BSF INTCON, INTE   ; Enable external interrupt on RB0 pin
00E8   168B           00320     BSF INTCON, TMR0IE  ; Enable Timer0 interrupt
                      00321 
                      00322     ; Initialize Timer0
00E9   1683 1303      00323     BANKSEL OPTION_REG
00EB   3007           00324     MOVLW b'00000111'   ; Set Timer0 prescaler to 1:256
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EC   0081           00325     MOVWF OPTION_REG 
                      00326 
00ED   0008           00327     RETURN
                      00328 
                      00329 
00EE                  00330 resetTimer0:
00EE   1283 1303      00331         BANKSEL PORTA
00F0   301E           00332         MOVLW D'30'
00F1   00B6           00333         MOVWF timerCounter
00F2   150B           00334         BSF INTCON, T0IF    ; Clear the TMR0 overflow interrupt flag
00F3   0008           00335         RETURN
                      00336 
                      00337 ; Write "Number 1" in the first line and make the cursor blinking on the second line
00F4                  00338 printNumber1:
00F4   1283 1303      00339     BANKSEL PORTD               ; Select bank 0
00F6   14F4           00340     BSF    Select,RS    ; Select data mode
00F7   304E           00341     MOVLW       'N'
00F8   2???           00342     CALL        send
00F9   3075           00343     MOVLW       'u'
00FA   2???           00344     CALL        send
00FB   306D           00345     MOVLW       'm'
00FC   2???           00346     CALL        send
00FD   3062           00347     MOVLW       'b'
00FE   2???           00348     CALL        send
00FF   3065           00349     MOVLW       'e'
0100   2???           00350     CALL        send
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0101   3072           00351     MOVLW       'r'
0102   2???           00352     CALL        send
0103   3020           00353     MOVLW       ' '
0104   2???           00354     CALL        send
0105   3031           00355     MOVLW       '1'
0106   2???           00356     CALL        send
                      00357 
                      00358 
                      00359     ; move cursor to the second line
0107   10F4           00360     BCF     Select,RS   ; Select command mode
0108   30C0           00361     MOVLW       0xC0        ; position to home cursor
0109   00B7           00362     MOVWF   position    ; store the cursor position
010A   2???           00363     CALL        send        ; and send code
                      00364 
010B   3000           00365     MOVLW    0x00       ; current digit
010C   00B0           00366     MOVWF    current_digit
                      00367     
010D   14F4           00368     BSF     Select,RS   ; Select data mode
010E   3030           00369     MOVLW    '0'        ; print the current digit
010F   2???           00370     CALL    send
                      00371 
                      00372     ; make the cursor pointing to the current digit
0110   10F4           00373     BCF     Select,RS   ; Select command mode
0111   0837           00374     MOVF    position, W
0112   2???           00375     CALL    send
                      00376 
                      00377     ; make the cursor blinking
0113   300F           00378     MOVLW       0x0F
0114   2???           00379     CALL        send
                      00380 
                      00381     ; set the state to 1
0115   3001           00382     MOVLW    0x01
0116   00B8           00383     MOVWF    state
                      00384     
0117   0008           00385     RETURN
                      00386 
                      00387 ; Write "2" instead of "1" in the first line and make the cursor blinking on the second line
0118                  00388 printNumber2:
0118   1283 1303      00389     BANKSEL PORTD               ; Select bank 0
011A   10F4           00390     BCF    Select,RS    ; Select command mode
011B   3087           00391     MOVLW       0x87        ;position the cursor to 8th position in the first line
011C   2???           00392     CALL        send        ; and send code
                      00393 
011D   14F4           00394     BSF    Select,RS    ; Select data mode
011E   3032           00395     MOVLW       '2'
011F   2???           00396     CALL        send
                      00397 
                      00398     ; return the cursor back to the second line to enter the second number
0120   10F4           00399     BCF     Select,RS   ; Select command mode
0121   0837           00400     MOVF    position, W ; move the cursor to previous position
0122   2???           00401     CALL    send
                      00402 
0123   0008           00403     RETURN
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00404 
                      00405 ; Write "Result" in the first line
0124                  00406 printResult:
0124   1283 1303      00407     BANKSEL PORTD               ; Select bank 0
0126   10F4           00408     BCF    Select,RS    ; Select command mode
0127   3080           00409     MOVLW       0x80        ;position the cursor to the first position in the first line
0128   2???           00410     CALL        send        ; and send code
                      00411 
0129   14F4           00412     BSF    Select,RS    ; Select data mode
012A   3052           00413     MOVLW       'R'
012B   2???           00414     CALL        send
012C   3065           00415     MOVLW       'e'
012D   2???           00416     CALL        send
012E   3073           00417     MOVLW       's'
012F   2???           00418     CALL        send
0130   3075           00419     MOVLW       'u'
0131   2???           00420     CALL        send
0132   306C           00421     MOVLW       'l'
0133   2???           00422     CALL        send
0134   3074           00423     MOVLW       't'
0135   2???           00424     CALL        send
0136   3020           00425     MOVLW    ' '
0137   2???           00426     CALL    send
0138   3020           00427     MOVLW    ' '
0139   2???           00428     CALL    send
                      00429 
                      00430     ; return the cursor back to the second line to print the result
013A   10F4           00431     BCF     Select,RS   ; Select command mode
013B   30C6           00432     MOVLW       0xC6        ;position the cursor to the 7th position in the second line
013C   2???           00433     CALL        send        ; and send code
                      00434 
                      00435     
                      00436 
013D   0008           00437     RETURN
                      00438 
                      00439 ; print welcome message on the LCD
013E                  00440 printWelcome:
                      00441     ; clear the display
013E   10F4           00442     BCF     Select, RS       ; Select command mode
013F   3001           00443     MOVLW    0x01           ; clear display
0140   2???           00444     CALL    send            ; and send code
0141   3080           00445     MOVLW       0x80        ; position to home cursor
0142   2???           00446         CALL    send        ; and send code 
0143   14F4           00447     BSF    Select,RS    ; Select data mode
                      00448 
                      00449     ; delay for 400ms to make the print blinking
Warning[202]: Argument out of range.  Least significant bits used.
0144   3090           00450     MOVLW   D'400'
0145   2???           00451     CALL    xms
                      00452 
                      00453     ; print "Welcome to" in the first line
0146   3057           00454     MOVLW       'W'             
0147   2???           00455     CALL        send            ; and send code
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0148   3065           00456     MOVLW       'e'
0149   2???           00457     CALL        send
014A   306C           00458     MOVLW       'l'
014B   2???           00459     CALL        send
014C   3063           00460     MOVLW       'c'
014D   2???           00461     CALL        send
014E   306F           00462     MOVLW       'o'
014F   2???           00463     CALL        send
0150   306D           00464     MOVLW       'm'
0151   2???           00465     CALL        send
0152   3065           00466     MOVLW       'e'
0153   2???           00467     CALL        send
0154   3020           00468     MOVLW       ' '
0155   2???           00469     CALL        send
0156   3074           00470     MOVLW       't'
0157   2???           00471     CALL        send
0158   306F           00472     MOVLW       'o'
0159   2???           00473     CALL        send
                      00474 
                      00475     ; move cursor to the second line
015A   10F4           00476     BCF     Select,RS   ; Select command mode
015B   30C0           00477     MOVLW       0xC0        ; position to home cursor
015C   2???           00478     CALL        send        ; and send code
015D   14F4           00479     BSF     Select,RS   ; Select data mode
                      00480     ; print "multiplication" in the second line
015E   306D           00481     MOVLW       'm'
015F   2???           00482     CALL        send
0160   3075           00483     MOVLW       'u'
0161   2???           00484     CALL        send
0162   306C           00485     MOVLW       'l'
0163   2???           00486     CALL        send
0164   3074           00487     MOVLW       't'
0165   2???           00488     CALL        send
0166   3069           00489     MOVLW       'i'
0167   2???           00490     CALL        send
0168   3070           00491     MOVLW       'p'
0169   2???           00492     CALL        send
016A   306C           00493     MOVLW       'l'
016B   2???           00494     CALL        send
016C   3069           00495     MOVLW       'i'
016D   2???           00496     CALL        send
016E   3063           00497     MOVLW       'c'
016F   2???           00498     CALL        send
0170   3061           00499     MOVLW       'a'
0171   2???           00500     CALL        send
0172   3074           00501     MOVLW       't'
0173   2???           00502     CALL        send
0174   3069           00503     MOVLW       'i'
0175   2???           00504     CALL        send
0176   306F           00505     MOVLW       'o'
0177   2???           00506     CALL        send
0178   306E           00507     MOVLW       'n'
0179   2???           00508     CALL        send
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00509 
                      00510     ; delay for 1 second
017A   3001           00511     MOVLW       0x01
017B   2???           00512     CALL        xseconds
                      00513 
017C   2???           00514     GOTO    start 
                      00515 
                      00516 
                      00517 ; increment the current digit
017D                  00518 incrementCurrentDigit:
017D   1283 1303      00519     BANKSEL PORTA
017F   0AB0           00520     INCF    current_digit, F  ; Increment the current digit
                      00521     
0180   300A           00522     MOVLW   0x0A
0181   0230           00523     SUBWF   current_digit, W  ; Compare current digit with 10
0182   1903           00524     BTFSC   STATUS, Z         ; Skip next step if current digit is less than 10
0183   01B0           00525     CLRF    current_digit     ; Reset the current digit to 0 if it 10 or more
0184   0008           00526     RETURN
                      00527 
                      00528 
                      00529 ; Calculate the multiplication of the first number by the tenth digit of the second number
0185                  00530 calculateSecondMultiplication:
                      00531     ; find the multiplication of the unit digit of the first number by the tens digit of the second numb
                            er
0185   1283 1303      00532     BANKSEL num1_unit
0187   0833           00533     MOVF    num1_unit, W
0188   00C6           00534     MOVWF   x
0189   0834           00535     MOVF    num2_tens, W
018A   00C7           00536     MOVWF   y
018B   2???           00537     CALL    multiplication  ; find x * y and store the result in res_mult (2 bytes)
                      00538 
                      00539     ; save the result in temp1 and temp2
018C   1283 1303      00540     BANKSEL temp1
018E   0848           00541     MOVF    res_mult, W
018F   00B9           00542     MOVWF   temp1
0190   0849           00543     MOVF    res_mult+1, W
0191   00C0           00544     MOVWF   temp2
                      00545 
                      00546     ; find the multiplication of the tens digit of the first number by the tens digit of the second numb
                            er
0192   0832           00547     MOVF    num1_tens, W
0193   00C6           00548     MOVWF   x
0194   0834           00549     MOVF    num2_tens, W
0195   00C7           00550     MOVWF   y
0196   2???           00551     CALL    multiplication  ; find x * y and store the result in res_mult (2 bytes)
                      00552 
                      00553     ; save the result in temp2 and temp3
0197   0848           00554     MOVF    res_mult, W
0198   07C0           00555     ADDWF   temp2, F
0199   1803           00556     BTFSC   STATUS, C
019A   0AC1           00557     INCF    temp3, F
019B   0849           00558     MOVF    res_mult+1, W
019C   07C1           00559     ADDWF   temp3, F
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00560     
                      00561 
                      00562     ; print the result on the LCD
019D   1283 1303      00563     BANKSEL PORTD               ; Select bank 0
019F   14F4           00564     BSF    Select,RS    ; Select data mode
01A0   0841           00565     MOVF   temp3, W
01A1   3E30           00566     ADDLW  0x30
01A2   2???           00567     CALL   send
01A3   0840           00568     MOVF   temp2, W
01A4   3E30           00569     ADDLW  0x30
01A5   2???           00570     CALL   send
01A6   0839           00571     MOVF   temp1, W
01A7   3E30           00572     ADDLW  0x30
01A8   2???           00573     CALL   send
                      00574 
01A9   2???           00575     GOTO    backFromMult
                      00576     
                      00577 
                      00578 
                      00579 
                      00580 
                      00581 
                      00582 
                      00583 
                      00584 
                      00585 
                      00586 
                      00587 
                      00588 
                      00589 
                      00590     
                      00591 
                      00592   
                      00593 ; multiply value of x and y and store the result in res_mult
01AA                  00594 multiplication:
01AA   1283 1303      00595     BANKSEL PORTA
01AC   01C8           00596     CLRF    res_mult
01AD   01C9           00597     CLRF    res_mult+1
                      00598 
                      00599   
                      00600 
01AE   0847           00601     MOVF    y, W
01AF   1903           00602     BTFSC   STATUS, Z   
01B0   2???           00603     GOTO    mult_end    ; If y is zero, return
01B1   0846           00604     MOVF    x, W        
                      00605 
01B2                  00606 mult_loop:
01B2   07C8           00607     ADDWF   res_mult, F     ; Add x to the result
01B3   1803           00608     BTFSC   STATUS, C      ; if there an overflow in the addition
Message[305]: Using default destination of 1 (file).
01B4   0AC9           00609     INCF    res_mult+1     ; increment the high byte of the result
01B5   0BC7           00610     DECFSZ  y, F            ; decrement y
01B6   2???           00611     GOTO    mult_loop       ; repeat the loop
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00612 
                      00613 
01B7                  00614 mult_end:
                      00615     
                      00616 
01B7   0008           00617     RETURN
                      00618    
                      00619 
Warning[205]: Found directive in column 1. (END)
3731                  00620 END
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CKE                               00000006
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
E                                 00000002
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
NOT_A                             00000005
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OutCod                            00000075
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Point                             00000073
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                00000001
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Select                            00000074
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Timer1                            00000070
TimerX                            00000071
UA                                00000001
Var                               00000072
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001
__DEBUG                           1
backFromMult                      00000060
buttonInterrupt                   00000008
calculateSecondMultiplication     00000185
clearDisplay                      000000DC
count                             00000031
current_digit                     00000030
incrementCurrentDigit             0000017D
inid                              0000009F
init                              000000BA
initInterrupts                    000000E4
loop                              000000D0
loop1                             00000075
loopX                             0000007A
loopx                             00000088
mult_end                          000001B7
mult_loop                         000001B2
multiplication                    000001AA
MPASM  5.43                        MASTER.ASM   2-11-2024  12:11:17         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

num1_tens                         00000032
num1_unit                         00000033
num2_tens                         00000034
num2_unit                         00000035
onems                             00000073
onesecond                         0000007E
position                          00000037
printNumber1                      000000F4
printNumber2                      00000118
printResult                       00000124
printWelcome                      0000013E
pulseE                            0000008C
res_hundreds                      00000044
res_mult                          00000048
res_tens                          00000043
res_thousands                     00000045
res_unit                          00000042
resetCurrentDigit                 00000061
resetSystem                       000000D1
resetTimer0                       000000EE
saveNum1Tens                      0000002E
saveNum1Unit                      00000035
saveNum2Tens                      00000043
saveNum2Unit                      0000004A
send                              00000091
skip                              0000006B
start                             000000C6
state                             00000038
temp1                             00000039
temp2                             00000040
temp3                             00000041
tempAux2                          00000042
tempAux3                          00000043
timerCounter                      00000036
timerInterrupt                    0000001A
x                                 00000046
xms                               00000079
xseconds                          00000087
y                                 00000047

Errors   :     0
Warnings :    24 reported,     0 suppressed
Messages :     9 reported,     0 suppressed

